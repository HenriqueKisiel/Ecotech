<main>

    <body>
        <div class="wrapper">
            <!-- Sidebar -->
            <div class="sidebar" data-background-color="dark">
                <div class="sidebar-logo">
                    <!-- Logo Header -->
                    <div class="logo-header" data-background-color="dark">
                        <a href="/home" class="logo">
                            <img src="/assets/Eco.png" alt="navbar brand" class="navbar-brand" height="30" />
                        </a>
                        <div class="nav-toggle">
                            <button class="btn btn-toggle toggle-sidebar">
                                <i class="gg-menu-right"></i>
                            </button>
                            <button class="btn btn-toggle sidenav-toggler">
                                <i class="gg-menu-left"></i>
                            </button>
                        </div>
                        <button class="topbar-toggler more">
                            <i class="gg-more-vertical-alt"></i>
                        </button>
                    </div>
                    <!-- End Logo Header -->
                </div>
                <div class="sidebar-wrapper scrollbar scrollbar-inner">
                    <div class="sidebar-content">
                        <ul class="nav nav-secondary">
                            <li class="nav-item">
                                <a href="/home" class="collapsed" aria-expanded="false">
                                    <i class="fas fa-home"></i>
                                    <p>Home</p>
                                </a>
                            </li>
                            <li class="nav-section">
                                <span class="sidebar-mini-icon">
                                    <i class="fa fa-ellipsis-h"></i>
                                </span>
                                <h4 class="text-section">Funções Do Sistema</h4>
                            </li>
                            <li class="nav-item">
                                <a data-bs-toggle="collapse" href="#cadastro">
                                    <i class="fas fa-user"></i>
                                    <p>Cadastros</p>
                                    <span class="caret"></span>
                                </a>
                                <div class="collapse" id="cadastro">
                                    <ul class="nav nav-collapse">
                                        <li>
                                            <a href="/cadastrosBuscar">
                                                <span class="sub-item">Buscar</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/pessoa">
                                                <span class="sub-item">Nova Pessoa</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/usuario">
                                                <span class="sub-item">Novo Usuario</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/planta">
                                                <span class="sub-item">Nova Planta</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/motorista">
                                                <span class="sub-item">Novo Motorista</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/caminhao">
                                                <span class="sub-item">Novo Caminhão</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </li>
                            <li class="nav-item active">
                                <a data-bs-toggle="collapse" href="#estoque">
                                    <i class="fas fa-th-list"></i>
                                    <p>Estoque</p>
                                    <span class="caret"></span>
                                </a>
                                <div class="collapse" id="estoque">
                                    <ul class="nav nav-collapse">
                                        <li>
                                            <a href="/cadastrosBuscar2">
                                                <span class="sub-item">Buscar</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/estoque">
                                                <span class="sub-item">Novo Estoque</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/material">
                                                <span class="sub-item">Novo Material</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/movimentacoes">
                                                <span class="sub-item">Movimentações</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/pesagem">
                                                <span class="sub-item">Pesagem da coleta</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </li>
                            <li class="nav-item">
                                <a data-bs-toggle="collapse" href="#coleta">
                                    <i class="fa fa-map-marker-alt"></i>
                                    <p>Gestão de Coleta</p>
                                    <span class="caret"></span>
                                </a>
                                <div class="collapse" id="coleta">
                                    <ul class="nav nav-collapse">
                                        <li>
                                            <a href="/agendamento">
                                                <span class="sub-item">Agendamento</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/rotas">
                                                <span class="sub-item">Rotas Programadas</span>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="/attStatus">
                                                <span class="sub-item">Atualizar Status da Coleta</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </li>
                            <li class="nav-item">
                                <a href="/relatorios">
                                    <i class="fas fa-table"></i>
                                    <p>Relatórios</p>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a href="/processamento">
                                    <i class="fas fa-thumbtack"></i>
                                    <p>Processamento</p>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <!-- End Sidebar -->
            <!--Start MenuBar-->
            <div class="main-panel">
                <div class="main-header">
                    <div class="main-header-logo">
                        <!-- Logo Header -->
                        <div class="logo-header" data-background-color="dark">
                            <a href="#" class="logo">
                                <img src="public/assets/Eco.png" alt="navbar brand" class="navbar-brand" height="20" />
                            </a>
                            <div class="nav-toggle">
                                <button class="btn btn-toggle toggle-sidebar">
                                    <i class="gg-menu-right"></i>
                                </button>
                                <button class="btn btn-toggle sidenav-toggler">
                                    <i class="gg-menu-left"></i>
                                </button>
                            </div>
                            <button class="topbar-toggler more">
                                <i class="gg-more-vertical-alt"></i>
                            </button>
                        </div>
                        <!-- End Logo Header -->
                    </div>
                    <!-- Navbar Header -->
                    <nav class="navbar navbar-header navbar-header-transparent navbar-expand-lg border-bottom">
                        <div class="container-fluid">
                            <ul class="navbar-nav topbar-nav ms-md-auto align-items-center">
                                <li class="nav-item topbar-icon dropdown hidden-caret d-flex d-lg-none">
                                    <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button"
                                        aria-expanded="false" aria-haspopup="true">
                                        <i class="fa fa-search"></i>
                                    </a>
                                    <ul class="dropdown-menu dropdown-search animated fadeIn">
                                        <form class="navbar-left navbar-form nav-search">
                                            <div class="input-group">
                                                <input type="text" placeholder="Search ..." class="form-control" />
                                            </div>
                                        </form>
                                    </ul>
                                </li>
                                <li class="nav-item topbar-user dropdown hidden-caret">
                                    <a class="dropdown-toggle profile-pic" data-bs-toggle="dropdown" href="#"
                                        aria-expanded="false">
                                        <span class="profile-username">
                                            <i class="fas fa-user-circle fa-2x"></i>
                                        </span>
                                    </a>
                                    <ul class="dropdown-menu dropdown-user animated fadeIn">
                                        <div class="dropdown-user-scroll scrollbar-outer">
                                            <li>
                                                <div class="user-box">
                                                    <div class="u-text">
                                                        <h4>Henrique</h4>
                                                        <p class="text-muted">henrique@gmail.com</p>
                                                        <a href="#" class="btn btn-xs btn-secondary btn-sm">
                                                            Ver
                                                            Perfil
                                                        </a>
                                                    </div>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">Minha conta</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="#">Configurações</a>
                                                <div class="dropdown-divider"></div>
                                                <a class="dropdown-item" href="/login">Sair</a>
                                            </li>
                                        </div>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </nav>
                    <!-- End Navbar -->
                </div>
                <!--End MenuBar-->
                <!--Start conteudo indiviudual da pagina-->
                <div class="container">
                    <div class="page-inner">
                        <div class="d-flex flex-column flex-md-row justify-content-md-between align-items-center mb-3">
                            <div class="mb-3 d-flex flex-column">
                                <span class="fs-2 fw-bold">
                                    Movimentação de Material
                                </span>
                                <small class="text-muted">
                                    Preencha os dados da movimentação e clique em registrar.
                                </small>
                            </div>
                            <a href="/movimentacoesBuscar" class="btn btn-secondary me-3">
                                Movimentações
                            </a>
                        </div>
                        <div class="card shadow-lg">
                            <div class="card-header d-none">
                                <div class="card-title">
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Movimentação</label>
                                            <select name="movimentacao" class="form-select form-control">
                                                <option value="saida">Saída</option>
                                                <option value="entrada">Entrada</option>
                                                <option value="venda">Venda</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Planta</label>
                                            <select name="planta" class="form-select form-control">
                                                <option value="">Informe uma planta</option>
                                                {{#each plantas}}
                                                <option value="{{cd_planta}}">{{nm_planta}}</option>
                                                {{/each}}
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Estoque</label>
                                            <select name="estoque" class="form-select form-control">
                                                <option value="">Informe um estoque</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Material</label>
                                            <select name="material" class="form-select form-control">
                                                <option value="">Informe um material</option>
                                            </select>
                                        </div>
                                    </div>
                                    <hr class="mt-4">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Pessoa</label>
                                            <select name="pessoa" class="form-select form-control">
                                                <option value="fisica">Física</option>
                                                <option value="juridica">Jurídica</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Nome</label>
                                            <select name="nome" class="form-select form-control">
                                                <option value="">Selecione o Comprador</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Número</label>
                                            <input type="text" class="form-control" placeholder="Número do comprador"
                                                readonly>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">E-mail</label>
                                            <input type="text" class="form-control" placeholder="E-mail do comprador"
                                                readonly>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">CPF</label>
                                            <input type="text" class="form-control" placeholder="CPF do comprador"
                                                readonly>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">CNPJ</label>
                                            <input type="text" class="form-control" placeholder="CNPJ do comprador"
                                                readonly>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">CEP</label>
                                            <input type="text" class="form-control" placeholder="CEP do comprador"
                                                readonly>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="fw-bold">Motivo</label>
                                            <input type="text" class="form-control"
                                                placeholder="Descreva o motivo da movimentação">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-header d-none">
                                <div class="card-title"></div>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive rounded">
                                    <table class="table table-bordered table-head-bg-success">
                                        <thead>
                                            <tr>
                                                <th>Material</th>
                                                <th>Volume Atual</th>
                                                <th>KG Atual</th>
                                                <th>Volume a Movimentar</th>
                                                <th>KG a Movimentar</th>
                                                <th>Valor a Pagar</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody id="tbody-resultado-material">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <!--End conteudo indiviudual da pagina-->
                        <!--Start Script-->
                        <script>
                            document.addEventListener('DOMContentLoaded', function () {
                                // Seleciona o select de movimentação (entrada, saída, venda)
                                const movimentacaoSelect = document.querySelector('select[name="movimentacao"]');
                                if (!movimentacaoSelect) {
                                    console.error('select[name="movimentacao"] não encontrado no DOM');
                                    return;
                                }

                                // Seleciona o campo de motivo e seu container
                                const motivoInput = document.querySelector('input[placeholder="Descreva o motivo da movimentação"]');
                                const motivoField = motivoInput ? motivoInput.closest('.col-md-6') : null;

                                // Seletores dos campos que ficam ocultos ou visíveis dependendo do tipo de movimentação
                                const camposOcultosSelectors = [
                                    'select[name="pessoa"]',
                                    'select[name="nome"]',
                                    'input[placeholder="Número do comprador"]',
                                    'input[placeholder="E-mail do comprador"]',
                                    'input[placeholder="CPF do comprador"]',
                                    'input[placeholder="CNPJ do comprador"]',
                                    'input[placeholder="CEP do comprador"]'
                                ];

                                // Array com os containers dos campos ocultos
                                const camposOcultos = camposOcultosSelectors.map(selector => {
                                    const el = document.querySelector(selector);
                                    return el ? el.closest('.col-md-6') : null;
                                });

                                // Seletores dos campos de pessoa e comprador
                                const selectPessoa = document.querySelector('select[name="pessoa"]');
                                const selectNome = document.querySelector('select[name="nome"]');
                                const inputNumero = document.querySelector('input[placeholder="Número do comprador"]');
                                const inputEmail = document.querySelector('input[placeholder="E-mail do comprador"]');
                                const inputCPF = document.querySelector('input[placeholder="CPF do comprador"]');
                                const inputCNPJ = document.querySelector('input[placeholder="CNPJ do comprador"]');
                                const inputCEP = document.querySelector('input[placeholder="CEP do comprador"]');
                                const cpfInput = inputCPF;
                                const campoCPF = cpfInput ? cpfInput.closest('.col-md-6') : null;
                                const cnpjInput = inputCNPJ;
                                const campoCNPJ = cnpjInput ? cnpjInput.closest('.col-md-6') : null;

                                // Seletores dos campos de planta, estoque e material
                                const selectPlanta = document.querySelector('select[name="planta"]');
                                const selectEstoque = document.querySelector('select[name="estoque"]');
                                const selectMaterial = document.querySelector('select[name="material"]');
                                const tbodyResultado = document.getElementById('tbody-resultado-material');
                                const thValorPagar = document.querySelector('th:nth-child(6)');

                                // Exibe mensagem padrão na tabela quando nenhum material está selecionado
                                function mostrarMensagemSelecioneMaterial() {
                                    if (tbodyResultado) {
                                        tbodyResultado.innerHTML = `
                    <tr>
                        <td colspan="7" class="text-center text-muted">Selecione os dados do Material</td>
                    </tr>
                `;
                                    }
                                }

                                // Formata números para exibição, removendo zeros desnecessários
                                function formatarNumero(valor, casas) {
                                    if (valor == null) return '';
                                    // Garante string e força casas decimais
                                    return Number(valor).toFixed(casas || 8);
                                }

                                // Monta a linha da tabela com os dados do material selecionado
                                function mostrarLinhaMaterial(dados) {
                                    if (!tbodyResultado) return;

                                    const isVenda = movimentacaoSelect.value === 'venda';
                                    let campoValorCompra = '';
                                    if (isVenda) {
                                        // Se for venda, mostra campo de valor a pagar
                                        campoValorCompra = `
                                            <td>
                                                <input type="text" class="form-control" id="input-valor-compra" readonly style="font-weight:bold; color:green;"/>
                                                <div id="valor-compra-exibicao" style="font-size:0.9em; color:#555;"></div>
                                            </td>
                                        `;
                                    } else {
                                        campoValorCompra = `<td style="display:none"></td>`;
                                    }

                                    // Monta a linha da tabela
                                    tbodyResultado.innerHTML = `
                                        <tr>
                                            <td class="text-center" id="td-material">${dados.ds_material || ''}</td>
                                            <td class="text-center" id="td-volume">${formatarNumero(dados.qt_volume, 8)}</td>
                                            <td class="text-center" id="td-peso">${formatarNumero(dados.qt_peso, 3)}</td>
                                            <td><input type="number" class="form-control" id="input-volume" placeholder="Digite uma quantidade" readonly step="0.00000001"></td>
                                            <td><input type="text" class="form-control" id="input-peso" placeholder="Digite uma quantidade"></td>
                                            ${campoValorCompra}
                                            <td><a class="btn btn-warning text-white w-100" id="btn-registrar">Registrar</a></td>
                                        </tr>
                                    `;

                                    // Atualiza o volume automaticamente conforme o peso digitado
                                    const volume_m3 = Number(dados.volume_m3) || 0;
                                    const inputPeso = document.getElementById('input-peso');
                                    const inputVolume = document.getElementById('input-volume');
                                    const tdPesoAtual = document.getElementById('td-peso');
                                    const tdVolumeAtual = document.getElementById('td-volume');

                                    if (inputPeso && inputVolume) {
                                        inputPeso.addEventListener('input', function () {
                                            const peso = Number(inputPeso.value.replace(',', '.')) || 0;
                                            const pesoAtual = Number(tdPesoAtual?.textContent) || 0;
                                            const volumeAtual = Number(tdVolumeAtual?.textContent) || 0;
                                            // Se digitou exatamente o peso atual, zera o volume também
                                            if (Math.abs(peso - pesoAtual) < 0.000001) {
                                                inputVolume.value = volumeAtual;
                                            } else {
                                                inputVolume.value = peso * volume_m3;
                                            }
                                        });
                                        // Inicializa o valor se já houver peso
                                        inputPeso.dispatchEvent(new Event('input'));
                                    }

                                    // Lógica para exibir valor da compra na venda
                                    let valorPorKg = 0;
                                    if (isVenda) {
                                        const inputPeso = document.getElementById('input-peso');
                                        const inputValorCompra = document.getElementById('input-valor-compra');
                                        const valorCompraExibicao = document.getElementById('valor-compra-exibicao');

                                        // Busca o valor por kg do material
                                        fetch(`/valorPorKgMaterial/${selectMaterial.value}`)
                                            .then(res => res.json())
                                            .then(data => {
                                                valorPorKg = Number(data.valorPorKg) || 0;
                                                inputValorCompra.dataset.valorPorKg = valorPorKg;
                                                atualizarValorCompra();
                                            });

                                        // Atualiza o valor total conforme o peso digitado
                                        function atualizarValorCompra() {
                                            const qtdKg = Number(inputPeso.value) || 0;
                                            const valor = qtdKg * valorPorKg;
                                            inputValorCompra.value = valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
                                            valorCompraExibicao.innerText = valor > 0
                                                ? `R$ ${valorPorKg.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })} por KG`
                                                : '';
                                        }

                                        inputPeso.addEventListener('input', atualizarValorCompra);
                                    }

                                    // Evento do botão Registrar movimentação
                                    const btnRegistrar = document.getElementById('btn-registrar');
                                    btnRegistrar.addEventListener('click', function () {
                                        const qt_volume = document.getElementById('input-volume').value;
                                        const qt_peso = document.getElementById('input-peso').value.replace(',', '.');
                                        const cd_estoque = selectEstoque.value;
                                        const cd_material = selectMaterial.value;
                                        const movimentacao = movimentacaoSelect.value;
                                        const motivo = motivoInput ? motivoInput.value : '';

                                        // Pessoa física/jurídica para venda
                                        let cd_pessoa_fisica = null;
                                        let cd_pessoa_juridica = null;
                                        let vl_valor_por_kg = null;

                                        if (movimentacao === 'venda') {
                                            const tipoPessoa = selectPessoa ? selectPessoa.value : '';
                                            const nomeComprador = selectNome ? selectNome.value : '';
                                            if (tipoPessoa === 'fisica') cd_pessoa_fisica = nomeComprador;
                                            if (tipoPessoa === 'juridica') cd_pessoa_juridica = nomeComprador;
                                            const inputValorCompra = document.getElementById('input-valor-compra');
                                            vl_valor_por_kg = inputValorCompra ? Number(inputValorCompra.dataset.valorPorKg) || 0 : 0;
                                        }

                                        // Validações básicas
                                        if (!cd_estoque || !cd_material) {
                                            alert('Selecione estoque e material.');
                                            return;
                                        }
                                        if (qt_peso <= 0) {
                                            swal("Erro ao registrar!", "Informe um valor de peso válido para movimentar.", {
                                                icon: "error",
                                                buttons: {
                                                    confirm: {
                                                        text: "OK",
                                                        className: "btn btn-danger",
                                                    },
                                                },
                                            });
                                            return;
                                        }

                                        // Envia os dados para o backend registrar a movimentação
                                        fetch('/atualizarEstoqueMaterial', {
                                            method: 'POST',
                                            headers: { 'Content-Type': 'application/json' },
                                            body: JSON.stringify({
                                                cd_estoque,
                                                cd_material,
                                                qt_volume,
                                                qt_peso,
                                                movimentacao,
                                                ds_motivo: motivo,
                                                cd_pessoa_fisica,
                                                cd_pessoa_juridica,
                                                vl_valor_por_kg
                                            })
                                        })
                                            .then(res => res.json())
                                            .then(resp => {
                                                if (resp.sucesso) {
                                                    // Se backend retornar script, executa (para feedback customizado)
                                                    if (resp.script) {
                                                        const match = resp.script.match(/<script>([\s\S]*)<\/script>/i);
                                                        if (match && match[1]) {
                                                            eval(match[1]);
                                                        }
                                                    } else {
                                                        alert('Movimentação registrada com sucesso!');
                                                    }

                                                    // Atualiza a linha do material com os novos valores
                                                    mostrarLinhaMaterial({
                                                        ds_material: dados.ds_material,
                                                        qt_volume: resp.novoVolume,
                                                        qt_peso: resp.novoPeso,
                                                        volume_m3: dados.volume_m3
                                                    });

                                                    // Limpa campos de motivo e comprador
                                                    if (motivoInput) motivoInput.value = '';
                                                    if (selectNome) selectNome.selectedIndex = 0;
                                                } else {
                                                    // Mostra erro se houver
                                                    if (resp.script) {
                                                        const match = resp.script.match(/<script>([\s\S]*)<\/script>/i);
                                                        if (match && match[1]) {
                                                            eval(match[1]);
                                                        }
                                                    } else {
                                                        alert(resp.erro || 'Erro ao registrar movimentação!');
                                                    }
                                                }
                                            })
                                            .catch(() => alert('Erro ao registrar movimentação!'));
                                    });
                                }

                                // Atualiza campos do formulário conforme o tipo de movimentação
                                function atualizarCampos() {
                                    const valorMov = movimentacaoSelect.value;

                                    // Mostra ou esconde a coluna de valor a pagar
                                    if (thValorPagar) {
                                        thValorPagar.style.display = valorMov === 'venda' ? '' : 'none';
                                    }

                                    // Se for saída ou entrada, mostra motivo e esconde campos de comprador
                                    if (valorMov === 'saida' || valorMov === 'entrada') {
                                        if (motivoField) motivoField.style.display = 'block';
                                        camposOcultos.forEach(el => { if (el) el.style.display = 'none'; });
                                    } else {
                                        // Se for venda, mostra campos de comprador e esconde motivo
                                        if (motivoField) motivoField.style.display = 'none';
                                        camposOcultos.forEach(el => { if (el) el.style.display = 'block'; });
                                        atualizarCamposPessoa();
                                        carregarNomesComprador();
                                    }

                                    // Atualiza materiais conforme estoque selecionado
                                    if (selectEstoque && selectEstoque.value) {
                                        carregarMateriaisPorEstoque(selectEstoque.value);
                                    }
                                    mostrarMensagemSelecioneMaterial();
                                }

                                // Atualiza campos de CPF/CNPJ conforme tipo de pessoa
                                function atualizarCamposPessoa() {
                                    if (!selectPessoa) return;
                                    const valorPessoa = selectPessoa.value;

                                    if (valorPessoa === 'fisica') {
                                        if (campoCPF) campoCPF.style.display = 'block';
                                        if (campoCNPJ) campoCNPJ.style.display = 'none';
                                    } else if (valorPessoa === 'juridica') {
                                        if (campoCPF) campoCPF.style.display = 'none';
                                        if (campoCNPJ) campoCNPJ.style.display = 'block';
                                    } else {
                                        if (campoCPF) campoCPF.style.display = 'block';
                                        if (campoCNPJ) campoCNPJ.style.display = 'block';
                                    }
                                    carregarNomesComprador();
                                    limparCamposComprador();
                                }

                                // Carrega nomes dos compradores (física ou jurídica) via fetch
                                function carregarNomesComprador() {
                                    if (!selectPessoa || !selectNome) return;
                                    const tipoPessoa = selectPessoa.value;
                                    let url = '';
                                    if (tipoPessoa === 'fisica') {
                                        url = '/compradores/fisica';
                                    } else if (tipoPessoa === 'juridica') {
                                        url = '/compradores/juridica';
                                    } else {
                                        selectNome.innerHTML = '<option value="">Selecione o Comprador</option>';
                                        return;
                                    }

                                    fetch(url)
                                        .then(res => res.json())
                                        .then(lista => {
                                            selectNome.innerHTML = '<option value="">Selecione o Comprador</option>';
                                            lista.forEach(pessoa => {
                                                const option = document.createElement('option');
                                                option.value = tipoPessoa === 'fisica' ? pessoa.cd_pessoa_fisica : pessoa.cd_pessoa_juridica;
                                                option.textContent = tipoPessoa === 'fisica' ? pessoa.nm_pessoa_fisica : pessoa.nm_fantasia;
                                                option.dataset.info = JSON.stringify(pessoa);
                                                selectNome.appendChild(option);
                                            });
                                        });
                                }

                                // Limpa campos de dados do comprador
                                function limparCamposComprador() {
                                    if (inputNumero) inputNumero.value = '';
                                    if (inputEmail) inputEmail.value = '';
                                    if (inputCPF) inputCPF.value = '';
                                    if (inputCNPJ) inputCNPJ.value = '';
                                    if (inputCEP) inputCEP.value = '';
                                }

                                // Preenche campos de dados do comprador ao selecionar um nome
                                function preencherCamposComprador() {
                                    const tipoPessoa = selectPessoa.value;
                                    const selectedOption = selectNome.options[selectNome.selectedIndex];
                                    if (!selectedOption || !selectedOption.dataset.info) {
                                        limparCamposComprador();
                                        return;
                                    }
                                    const dados = JSON.parse(selectedOption.dataset.info);

                                    if (tipoPessoa === 'fisica') {
                                        if (inputNumero) inputNumero.value = dados.nr_telefone_celular || '';
                                        if (inputEmail) inputEmail.value = dados.ds_email || '';
                                        if (inputCPF) inputCPF.value = dados.nr_cpf || '';
                                        if (inputCNPJ) inputCNPJ.value = '';
                                        if (inputCEP) inputCEP.value = dados.nr_cep || '';
                                    } else if (tipoPessoa === 'juridica') {
                                        if (inputNumero) inputNumero.value = dados.nr_telefone || '';
                                        if (inputEmail) inputEmail.value = dados.ds_email || '';
                                        if (inputCPF) inputCPF.value = '';
                                        if (inputCNPJ) inputCNPJ.value = dados.nr_cnpj || '';
                                        if (inputCEP) inputCEP.value = dados.nr_cep || '';
                                    }
                                }

                                // Carrega estoques disponíveis para a planta selecionada
                                function carregarEstoquesPorPlanta(cd_planta) {
                                    if (!selectEstoque || !selectMaterial) return;

                                    if (!cd_planta) {
                                        selectEstoque.innerHTML = '<option value="">Informe um estoque</option>';
                                        selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                        return;
                                    }

                                    fetch(`/estoquePorPlanta/${cd_planta}`)
                                        .then(response => {
                                            if (!response.ok) throw new Error('Erro ao buscar estoques');
                                            return response.json();
                                        })
                                        .then(estoques => {
                                            selectEstoque.innerHTML = '<option value="">Informe um estoque</option>';
                                            selectMaterial.innerHTML = '<option value="">Informe um material</option>';

                                            estoques.forEach(estoque => {
                                                const option = document.createElement('option');
                                                option.value = estoque.cd_estoque;
                                                option.textContent = estoque.nm_estoque;
                                                selectEstoque.appendChild(option);
                                            });
                                        })
                                        .catch(error => {
                                            console.error('Erro:', error);
                                            selectEstoque.innerHTML = '<option value="">Informe um estoque</option>';
                                            selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                        });
                                }

                                // Carrega materiais disponíveis para o estoque selecionado
                                function carregarMateriaisPorEstoque(estoqueId) {
                                    if (!selectMaterial) return;

                                    if (!estoqueId) {
                                        selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                        return;
                                    }

                                    const movimentacao = movimentacaoSelect.value;

                                    if (movimentacao === 'entrada') {
                                        // Para entrada, busca todos os materiais
                                        fetch(`/todosMateriais`)
                                            .then(response => {
                                                if (!response.ok) throw new Error('Erro ao buscar todos os materiais');
                                                return response.json();
                                            })
                                            .then(materiais => {
                                                selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                                materiais.forEach(material => {
                                                    const option = document.createElement('option');
                                                    option.value = material.cd_material;
                                                    option.textContent = material.ds_material;
                                                    selectMaterial.appendChild(option);
                                                });
                                            })
                                            .catch(error => {
                                                console.error('Erro:', error);
                                                selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                            });

                                    } else {
                                        // Para saída/venda, busca materiais do estoque
                                        fetch(`/materiaisPorEstoque/${estoqueId}/${movimentacao}`)
                                            .then(response => {
                                                if (!response.ok) throw new Error('Erro ao buscar materiais no estoque');
                                                return response.json();
                                            })
                                            .then(materiais => {
                                                selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                                materiais.forEach(material => {
                                                    const option = document.createElement('option');
                                                    option.value = material.cd_material;
                                                    option.textContent = material.ds_material;
                                                    selectMaterial.appendChild(option);
                                                });
                                            })
                                            .catch(error => {
                                                console.error('Erro:', error);
                                                selectMaterial.innerHTML = '<option value="">Informe um material</option>';
                                            });
                                    }
                                    mostrarMensagemSelecioneMaterial();
                                }

                                // Inicializa a tabela com mensagem padrão
                                mostrarMensagemSelecioneMaterial();

                                // Eventos para atualizar campos ao trocar planta, estoque, movimentação, pessoa, nome, material
                                if (selectPlanta) {
                                    selectPlanta.addEventListener('change', function () {
                                        carregarEstoquesPorPlanta(this.value);
                                        mostrarMensagemSelecioneMaterial();
                                    });
                                }

                                if (selectEstoque) {
                                    selectEstoque.addEventListener('change', function () {
                                        carregarMateriaisPorEstoque(this.value);
                                        mostrarMensagemSelecioneMaterial();
                                    });
                                }

                                movimentacaoSelect.addEventListener('change', atualizarCampos);

                                if (selectPessoa) {
                                    selectPessoa.addEventListener('change', () => {
                                        if (movimentacaoSelect.value !== 'saida' && movimentacaoSelect.value !== 'entrada') {
                                            atualizarCamposPessoa();
                                        }
                                    });
                                }

                                if (selectNome) {
                                    selectNome.addEventListener('change', preencherCamposComprador);
                                }

                                if (selectMaterial) {
                                    selectMaterial.addEventListener('change', function () {
                                        const cd_material = this.value;
                                        const cd_estoque = selectEstoque ? selectEstoque.value : '';
                                        if (!cd_material || !cd_estoque) {
                                            mostrarMensagemSelecioneMaterial();
                                            return;
                                        }
                                        const movimentacao = movimentacaoSelect.value;
                                        let url = '';
                                        if (movimentacao === 'entrada') {
                                            url = `/dadosMaterialEntrada/${cd_estoque}/${cd_material}`;
                                        } else {
                                            url = `/dadosMaterialEstoque/${cd_estoque}/${cd_material}`;
                                        }
                                        fetch(url)
                                            .then(res => res.json())
                                            .then(dados => {
                                                mostrarLinhaMaterial(dados);
                                            })
                                            .catch(() => {
                                                mostrarMensagemSelecioneMaterial();
                                            });
                                    });
                                }

                                // Inicializa campos ao carregar a página
                                atualizarCampos();

                                // Se já houver planta selecionada, carrega estoques
                                if (selectPlanta && selectPlanta.value) {
                                    carregarEstoquesPorPlanta(selectPlanta.value);
                                }

                                // Se já houver estoque selecionado, carrega materiais
                                if (selectEstoque && selectEstoque.value) {
                                    carregarMateriaisPorEstoque(selectEstoque.value);
                                }
                            });
                        </script>
                        <!--End Script-->
                    </div>
                </div>
                <footer class="footer">
                    <div class="container-fluid d-flex justify-content-between">
                        <nav class="pull-left">
                            <ul class="nav">
                                <li class="nav-item">
                                    <a class="nav-link" href="#">footer#1</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#">footer#2</a>
                                </li>
                            </ul>
                        </nav>
                        <div class="copyright">
                            2025 - Autores: Equipe 7
                        </div>
                    </div>
                </footer>
            </div>
        </div>
    </body>
</main>